name: CI/CD Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/mon-api-flask

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Lint stock service
        working-directory: stock_service
        run: |
          pip install -r requirements.txt
          pip install pylint
          PYTHONPATH=. pylint .
      - name: Lint product service
        working-directory: product_service
        run: |
          pip install -r requirements.txt
          pip install pylint
          PYTHONPATH=. pylint .
      - name: Lint sale service
        working-directory: sale_service
        run: |
          pip install -r requirements.txt
          pip install pylint
          PYTHONPATH=. pylint .
      - name: Lint location_service
        working-directory: location_service
        run: |
          pip install -r requirements.txt
          pip install pylint
          PYTHONPATH=. pylint .
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Run tests for stock service
        working-directory: stock_service
        run: |
          pip install -r requirements.txt
          pip install pytest
          PYTHONPATH=. pytest test

      - name: Run tests for product service
        working-directory: product_service
        run: |
          pip install -r requirements.txt
          pip install pytest
          PYTHONPATH=. pytest test

      - name: Run tests for sale service
        working-directory: sale_service
        run: |
          pip install -r requirements.txt
          pip install pytest
          PYTHONPATH=. pytest test

      - name: Run tests for location service
        working-directory: location_service
        run: |
          pip install -r requirements.txt
          pip install pytest
          PYTHONPATH=. pytest test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest